"""Generate a minimal folder tree + boiler-plate FastAPI micro-service.
Later versions will use LangChain + GPT-4o for smarter scaffolding.
"""
from __future__ import annotations

import os
from pathlib import Path
from textwrap import dedent


def _write(path: Path, content: str) -> None:
    path.parent.mkdir(parents=True, exist_ok=True)
    path.write_text(content, encoding="utf-8")


def scaffold_project(dest: Path) -> None:
    print(f"🛠️  Creating project at {dest} …")
    dest.mkdir(parents=True, exist_ok=True)

    # ───────── core directories
    for d in ("app", "tests", ".github/workflows"):
        (dest / d).mkdir(parents=True, exist_ok=True)

    # ───────── README
    _write(dest / "README.md", f"# {dest.name}\n\nGenerated by ZeroDev AI.")

    # ───────── sample FastAPI app
    _write(
        dest / "app" / "main.py",
        dedent(
            """
            from fastapi import FastAPI

            app = FastAPI()

            @app.get("/")
            async def root():
                return {"status": "ok"}
            """,
        ).strip(),
    )

    # ───────── requirements.txt
    _write(dest / "requirements.txt", "fastapi\nuvicorn[standard]\n")

    # ───────── GitHub Actions (basic test placeholder)
    gha = dest / ".github" / "workflows" / "ci.yml"
    _write(
        gha,
        dedent(
            """
            name: CI

            on: [push]

            jobs:
              test:
                runs-on: ubuntu-latest
                steps:
                  - uses: actions/checkout@v4
                  - uses: actions/setup-python@v5
                    with:
                      python-version: '3.12'
                  - run: python -m pip install -r requirements.txt
                  - run: echo "No tests yet – generated project."  
            """,
        ).strip(),
    )

    print("✅ Project scaffold complete.")
